on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout#usage
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # Checkout *all* repository history. This allows proper execution of
          # the two upcoming  “change mtime” steps, intended to have webpack
          # manage its cache consistently.
          # https://github.com/webpack/webpack/issues/10707#issuecomment-613245056
          fetch-depth: 0

      # https://github.com/actions/setup-node#usage
      - name: Setup Node.js environment
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      # https://github.com/actions/cache#usage
      # https://github.com/actions/cache/blob/main/examples.md#node---npm
      - name: Cache NPM modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      # https://github.com/actions/cache#usage
      - name: Cache favicons build
        uses: actions/cache@v2
        env:
          cache-name: favicons-webpack-plugin-cache
        with:
          path: ${{ github.workspace }}/.favicons-webpack-plugin-cache
          # It is expected that there never is an exact cache match for a key named
          # 'deploy-favicons-webpack-plugin-cache-' (without a GitHub SHA).
          # Rather, the most recently created cache with a key prefixed as such
          # is expected to be restored.
          # This mechanism is intended to ensure that each job execution
          # can use the cache saved at the end of previous job execution.
          # https://help.github.com/en/actions/configuring-and-managing-workflows/caching-dependencies-to-speed-up-workflows#matching-a-cache-key
          key: deploy-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            deploy-${{ env.cache-name }}-

      - name: Install NPM dependencies
        run: npm install

      # Next two steps aim to keep file modification timestamps of all files
      # identical from one deploy to the next, to have webpack consistently
      # determine whether it should preserve or invalidate its cache.
      # https://github.com/webpack/webpack/issues/10707#issuecomment-613245056

      - name: Change mtime of git managed file to respective their last commit time
        run: |
          git ls-tree -r --name-only HEAD | while read filename; do
            touch -mt "$(git log -1 --pretty="format:%ad" --date=format:%Y%m%d%H%M.%S $filename)" "$filename"
          done

      - name: Change mtime of files under node_modules to last commit time of package-lock.json
        run: |
          package_lock_mtime=$(git log -1 --pretty="format:%ad" --date=format:%Y%m%d%H%M.%S package-lock.json)
          find node_modules -type f -print0 | xargs -0 touch -mt $package_lock_mtime

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          cname: www.fasterdisco.com
